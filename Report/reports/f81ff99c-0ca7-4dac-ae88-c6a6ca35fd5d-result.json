{"name": "test_01_To_verify_that_Grafana_is_up_and_available_in_web", "status": "broken", "statusDetails": {"message": "TypeError: not all arguments converted during string formatting", "trace": "self = <testcases.test_Grafana.Test_Grafana object at 0x000001CEE406FA90>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"393fdad0fac3cd78b4fdf118e5af4b77\")>\n\n    @pytest.mark.regression\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_01_To_verify_that_Grafana_is_up_and_available_in_web(self, setup):\n        self.logger.info(\"*************** Test_001 To verify that grafana is up and available in web *****************\")\n        self.logger.info(\"setup method called\")\n        self.driver = setup\n        self.logger.info(\"****Opening URL****\")\n        self.driver.get(self.baseURL)\n        self.gf = Grafana_Installation(self.driver)\n        observer_title = self.gf.Grafanapagetitle()\n>       self.logger.debug(\"Observed Result of test_01_To_verify_that_Grafana_is_up_and_available_in_web is \"\n                          ,observer_title)\n\ntestcases\\test_Grafana.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Python_3.10\\lib\\logging\\__init__.py:1465: in debug\n    self._log(DEBUG, msg, args, **kwargs)\nC:\\Python_3.10\\lib\\logging\\__init__.py:1624: in _log\n    self.handle(record)\nC:\\Python_3.10\\lib\\logging\\__init__.py:1634: in handle\n    self.callHandlers(record)\nC:\\Python_3.10\\lib\\logging\\__init__.py:1696: in callHandlers\n    hdlr.handle(record)\nC:\\Python_3.10\\lib\\logging\\__init__.py:968: in handle\n    self.emit(record)\nC:\\Python_3.10\\lib\\site-packages\\_pytest\\logging.py:342: in emit\n    super().emit(record)\nC:\\Python_3.10\\lib\\logging\\__init__.py:1108: in emit\n    self.handleError(record)\nC:\\Python_3.10\\lib\\logging\\__init__.py:1100: in emit\n    msg = self.format(record)\nC:\\Python_3.10\\lib\\logging\\__init__.py:943: in format\n    return fmt.format(record)\nC:\\Python_3.10\\lib\\site-packages\\_pytest\\logging.py:113: in format\n    return super().format(record)\nC:\\Python_3.10\\lib\\logging\\__init__.py:678: in format\n    record.message = record.getMessage()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <LogRecord: root, 10, E:\\demo_datascience\\testcases\\test_Grafana.py, 34, \"Observed Result of test_01_To_verify_that_Grafana_is_up_and_available_in_web is \">\n\n    def getMessage(self):\n        \"\"\"\n        Return the message for this LogRecord.\n    \n        Return the message for this LogRecord after merging any user-supplied\n        arguments with the message.\n        \"\"\"\n        msg = str(self.msg)\n        if self.args:\n>           msg = msg % self.args\nE           TypeError: not all arguments converted during string formatting\n\nC:\\Python_3.10\\lib\\logging\\__init__.py:368: TypeError"}, "attachments": [{"name": "log", "source": "948e2364-2003-460c-b208-a3de2eca4137-attachment.txt", "type": "text/plain"}], "start": 1661166377003, "stop": 1661166385894, "uuid": "af46c862-1408-4de4-86e7-2cb6edd9c260", "historyId": "08a6767772a9851842db97b36d0bba36", "testCaseId": "85717e4a4328567637407546d83c9ea5", "fullName": "test_Grafana.Test_Grafana#test_01_To_verify_that_Grafana_is_up_and_available_in_web", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "regression"}, {"name": "suite", "value": "test_Grafana"}, {"name": "subSuite", "value": "Test_Grafana"}, {"name": "host", "value": "LAPTOP-83K3QJ4L"}, {"name": "thread", "value": "8920-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_Grafana"}]}